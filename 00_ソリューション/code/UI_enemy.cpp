//*****************************************************
//
// 敵数表示のUI[UIEnemy.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "UI_enemy.h"
#include "number.h"
#include "enemy.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
const int NUM_PLACE = 2;	// 数字の桁数
}

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************
CUIEnemy *CUIEnemy::m_pUIEnemy = nullptr;	// 自身のポインタ

//=====================================================
// コンストラクタ
//=====================================================
CUIEnemy::CUIEnemy() : m_pNumber(nullptr)
{

}

//=====================================================
// デストラクタ
//=====================================================
CUIEnemy::~CUIEnemy()
{

}

//=====================================================
// 生成処理
//=====================================================
CUIEnemy *CUIEnemy::Create(void)
{
	if (m_pUIEnemy == nullptr)
	{// インスタンス生成
		m_pUIEnemy = new CUIEnemy;

		if (m_pUIEnemy == nullptr)
			return nullptr;

		m_pUIEnemy->Init();
	}

	return m_pUIEnemy;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CUIEnemy::Init(void)
{
	// 数字の生成
	m_pNumber = CNumber::Create(NUM_PLACE, 0);

	if (m_pNumber == nullptr)
		return E_FAIL;

	// 数字の初期化

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CUIEnemy::Uninit(void)
{
	m_pUIEnemy = nullptr;

	Object::DeleteObject((CObject**)&m_pNumber);

	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CUIEnemy::Update(void)
{

}

//=====================================================
// 描画処理
//=====================================================
void CUIEnemy::Draw(void)
{
#ifdef _DEBUG

#endif
}