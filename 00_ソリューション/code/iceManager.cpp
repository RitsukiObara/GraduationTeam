//*****************************************************
//
// スカイボックスの処理[IceManager.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "iceManager.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{

}

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************
CIceManager *CIceManager::s_pIceManager = nullptr;	// 自身のポインタ

//=====================================================
// コンストラクタ
//=====================================================
CIceManager::CIceManager(int nPriority) : CObject(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CIceManager::~CIceManager()
{

}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CIceManager::Init(void)
{


	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CIceManager::Uninit(void)
{
	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CIceManager::Update(void)
{

}

//=====================================================
// 描画処理
//=====================================================
void CIceManager::Draw(void)
{

}

//=====================================================
// 生成処理
//=====================================================
CIceManager *CIceManager::Create(int nNumV, int nNumH)
{
	CIceManager *pIceManager = nullptr;

	if (pIceManager == nullptr)
	{
		pIceManager = new CIceManager;

		if (pIceManager != nullptr)
		{
			pIceManager->m_nNumGridVirtical = nNumV;
			pIceManager->m_nNumGridHorizontal = nNumH;
			pIceManager->Init();
		}
	}

	return pIceManager;
}