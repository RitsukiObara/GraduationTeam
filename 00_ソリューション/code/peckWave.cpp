//*****************************************************
//
// つっつき波紋の処理[peckWave.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "peckWave.h"
#include "polygon3D.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
const D3DXCOLOR COL_INIT = D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f);	// 初期の色
}

//====================================================
// コンストラクタ
//====================================================
CPeckWave::CPeckWave() : m_col()
{

}

//====================================================
// デストラクタ
//====================================================
CPeckWave::~CPeckWave()
{

}

//====================================================
// 生成処理
//====================================================
CPeckWave *CPeckWave::Create(void)
{
	CPeckWave *pPeckWave = nullptr;

	pPeckWave = new CPeckWave;

	if (pPeckWave != nullptr)
	{
		pPeckWave->Init();
	}

	return pPeckWave;
}

//====================================================
// 初期化処理
//====================================================
HRESULT CPeckWave::Init(void)
{
	// 色の初期化
	m_col = COL_INIT;

	return S_OK;
}

//====================================================
// 終了処理
//====================================================
void CPeckWave::Uninit(void)
{
	Release();
}

//====================================================
// 更新処理
//====================================================
void CPeckWave::Update(void)
{

}

//====================================================
// 描画処理
//====================================================
void CPeckWave::Draw(void)
{

}