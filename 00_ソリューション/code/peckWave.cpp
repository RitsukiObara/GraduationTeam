//*****************************************************
//
// つっつき波紋の処理[peckWave.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "peckWave.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
namespace polygon
{
const float SIZE_INIT = 0.0f;	// 初期のサイズ

}
}

//====================================================
// コンストラクタ
//====================================================
CPeckWave::CPeckWave(int nPriority) : CPolygon3D(nPriority)
{

}

//====================================================
// デストラクタ
//====================================================
CPeckWave::~CPeckWave()
{

}

//====================================================
// 生成処理
//====================================================
CPeckWave *CPeckWave::Create(D3DXVECTOR3 pos, D3DXCOLOR col)
{
	CPeckWave *pPeckWave = nullptr;

	pPeckWave = new CPeckWave;

	if (pPeckWave != nullptr)
	{
		pPeckWave->Init();
		pPeckWave->SetPosition(pos);
		pPeckWave->SetColor(col);
	}

	return pPeckWave;
}

//====================================================
// 初期化処理
//====================================================
HRESULT CPeckWave::Init(void)
{
	CPolygon3D::Init();

	return S_OK;
}

//====================================================
// 終了処理
//====================================================
void CPeckWave::Uninit(void)
{
	CPolygon3D::Uninit();
}

//====================================================
// 更新処理
//====================================================
void CPeckWave::Update(void)
{
	CPolygon3D::Update();
}

//====================================================
// 描画処理
//====================================================
void CPeckWave::Draw(void)
{
	CPolygon3D::Draw();
}